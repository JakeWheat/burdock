Test: empty
Script:
Result:

Test: Trivial
Script:
a = 3
a
Result:
a = 3
a

Test: unrecognised iden
Script:
a
Errors:
unrecognised-identifier([list: "a"])

Test: import
Module:
a = 3
Result:
a = 3
make-module({a:a})

Test: import
File: imported
a = 3
Script:
import file("imported") as i
i.a
Result:
_module-imported = load-module("imported")
_module-imported.a

Test: import unrec
File: imported
a = 3                                                
Script:
import file("imported") as i
i.b
Errors:
unrecognised-identifier([list: "i", "b"])

Test: block
Script:
block:
  a = 3
  a
end
b = 6
block:
  b
end
Result:
block:
  a = 3
  a
end
b = 6
block:
  b
end

Test: block no escape
Script:
block:
  a = 3
end
a
Errors:
unrecognised-identifier([list: "a"])

Test: block no escape module version
Module:
a = 2
block:
  b = 3
end
c = 4
a
Result:
a = 2
block:
  b = 3
end
c = 4
a
make-module({a:a,c:c})

Test: trivial field access
Script:
a = 1
a.x
Result:
a = 1
a.x

Test: fail field access
Script:
a = 1
b.x
Errors:
unrecognised-identifier([list: "b", "x"])

Test: import field access
File: imported
a = 3        
Script:                                        
import file("imported") as i
i.a.x
Result:
_module-imported = load-module("imported")
_module-imported.a.x

Test: import field access fail
File: imported
a = 3        
Script:                                        
import file("imported") as i
i.b.x
Errors:
unrecognised-identifier([list: "i", "b", "x"])

Test: trivial shadow
Script:                                        
a = 3
shadow a = 4
Result:
a = 3
shadow a = 4

Test: needs shadow
Script:                                        
a = 3
a = 4
Errors:
identifier-redefined("a")

Test: includefrom
File: imported
a = 3
Script:
import file("imported") as i
include from i: * end
a
Result:
_module-imported = load-module("imported")
_module-imported.a

Test: includefrom with field access
File: imported
a = 3        
Script:                                        
import file("imported") as i
include from i: * end
a.x
Result:
_module-imported = load-module("imported")
_module-imported.a.x

Test: includefrom * clash
File: imported1
a = 3        
File: imported2
a = 3        
Script:                                        
import file("imported1") as i1
import file("imported2") as i2
include from i1: * end
include from i2: * end
a.x
Errors:
identifier-redefined("a")

Test: include shadow fail
File: imported
a = 3
Script:
import file("imported") as i
include from i: * end
a = 3
a
Errors:
identifier-redefined("a")

Test: include shadow ok
File: imported
a = 3
Script:
import file("imported") as i
include from i: * end
shadow a = 3
a
i.a
Result:
_module-imported = load-module("imported")
shadow a = 3
a
_module-imported.a

Test: provide all direct
Module:
provide:
  *
end
a = 3
b = 4
Result:
a = 3
b = 4
make-module({a:a, b:b})

Test: provide explicit
Module:
provide:
  a
end
a = 3
b = 4
Result:
a = 3
b = 4
make-module({a:a})

Test: provide rename
Module:
provide:
  a as c
end
a = 3
b = 4
Result:
a = 3
b = 4
make-module({c:a})

Test: provide hiding
Module:
provide:
  * hiding (a)
end
a = 3
b = 4
Result:
a = 3
b = 4
make-module({b:b})

Test: provide hiding order
Module:
provide:
  * hiding (a)
end
a = 3
b = 4
c = 5
Result:
a = 3
b = 4
c = 5
make-module({b:b,c:c})

Test: provide order
Module:
provide:
  a,
  b
end
provide:
  c,
  d
end
a = 3
b = 4
c = 5
d = 6
Result:
a = 3
b = 4
c = 5
d = 6
make-module({a:a, b:b,c:c, d:d})

Test: provide all direct
File: mymod
provide:
  *
end
a = 3
b = 4
Script:
import file("mymod") as mymod
mymod.a
mymod.b
Result:
_module-mymod = load-module("mymod")
_module-mymod.a
_module-mymod.b

Test: provide explicit
File: mymod
provide:
  a
end
a = 3
b = 4
Script:
import file("mymod") as mymod
mymod.a
Result:
_module-mymod = load-module("mymod")
_module-mymod.a

Test: provide explicit fail
File: mymod
provide:
  a
end
a = 3
b = 4
Script:
import file("mymod") as mymod
mymod.a
mymod.b
Errors:
unrecognised-identifier([list: "mymod", "b"])

Test: provide rename fail 1
File: mymod
provide:
  a as c
end
a = 3
b = 4
Script:
import file("mymod") as mymod
mymod.a
Errors:
unrecognised-identifier([list: "mymod", "a"])


Test: provide rename fail 2
File: mymod
provide:
  a as c
end
a = 3
b = 4
Script:
import file("mymod") as mymod
mymod.b
Errors:
unrecognised-identifier([list: "mymod","b"])

Test: provide rename
File: mymod
provide:
  a as c
end
a = 3
b = 4
Script:
import file("mymod") as mymod
mymod.c
Result:
_module-mymod = load-module("mymod")
_module-mymod.c

Test: provide hiding fail
File: mymod
provide:
  * hiding (a)
end
a = 3
b = 4
Script:
import file("mymod") as mymod
mymod.a
Errors:
unrecognised-identifier([list: "mymod", "a"])

Test: provide hiding
File: mymod
provide:
  * hiding (a)
end
a = 3
b = 4
Script:
import file("mymod") as mymod
mymod.b
Result:
_module-mymod = load-module("mymod")
_module-mymod.b


Test: includefrom explicit
File: imported
a = 3
b = 4
d = 5
Script:
import file("imported") as i
include from i: a end
a
Result:
_module-imported = load-module("imported")
_module-imported.a

Test: includefrom explicit fail
File: imported
a = 3
b = 4
d = 5
Script:
import file("imported") as i
include from i: a end
b
Errors:
unrecognised-identifier([list: "b"])

Test: includefrom non existent
File: imported
a = 3
b = 4
d = 5
Script:
import file("imported") as i
include from i: e end
Errors:
unrecognised-identifier([list: "e"])

Test: includefrom rename
File: imported
a = 3
b = 4
d = 5
Script:
import file("imported") as i
include from i: a as b end
b
Result:
_module-imported = load-module("imported")
_module-imported.a

Test: includefrom hiding
File: imported
a = 3
b = 4
d = 5
Script:
import file("imported") as i
include from i: * hiding (a) end
b
Result:
_module-imported = load-module("imported")
_module-imported.b

Test: includefrom hiding fail
File: imported
a = 3
b = 4
d = 5
Script:
import file("imported") as i
include from i: * hiding (a) end
a
Errors:
unrecognised-identifier([list: "a"])
