
include relational

check "from list and equals":

  rel1 = rel-from-list(
    [list:
      {a : 1, b : 'a'},
      {a : 2, b : 'b'},
      {a : 3, b : 'c'}])

  rel1 is rel-from-list(
    [list:
      {b : 'a', a : 1 },
      {a : 3, b : 'c'},
      {a : 2, b : 'b'}])

  rel1 is-not rel-from-list(
    [list:
      {b : 'a', a : 2 },
      {a : 3, b : 'c'},
      {a : 2, b : 'b'}])

  rel1 is rel-from-table(table a,b:
      row: 1,'a'
      row: 2,'b'
      row: 3,'c'
    end)

end

check "table dee and table dum":
  table-dee is rel-from-list([list: {}])
  table-dum is rel-from-list([list: ])
  table-dee is-not table-dum

  d = rel-from-table(table: end)
  d is table-dum
  e = rel-from-table(table: row: end)
  e is table-dee

end

check "functional insert, update, delete":

  # insert is just union
  block:
    a = rel-from-table(table a,b:
            row: 1,2
            row: 2,3
          end)
    b = rel-from-table(table a,b:
            row: 3,4
            row: 4,5
          end)
    r = rel-from-table(table a,b:
            row: 1,2
            row: 2,3
            row: 3,4
            row: 4,5
          end)

    rel-union(a,b) is r
  end

  # functional delete with no condition is too trivial to test
  # might be useful once headers are added

  # functional delete with condition is like where with inverted condition
  block:
    a = rel-from-table(table a,b:
            row: 1,2
            row: 2,3
            row: 3,3
            row: 3,4
          end)
    c = rel-from-table(table a,b:
            row: 1,2
            row: 3,4
          end)
  
    rel-delete(a, {(r): r.b == 3}) is c

  end

  # unconditional update
  block:
    a = rel-from-table(table a,b,c:
            row: 1,2,10
            row: 2,3,11
            row: 3,3,12
            row: 3,4,13
          end)
    c = rel-from-table(table a,b,c:
            row: 2,2,10
            row: 3,3,11
            row: 4,3,12
            row: 4,4,13
          end)
    # definitely needs some record update syntax
    # this will also help constraint from changing the type
    # update is more or less a combination of project and extend
    # can also be seen as a variation on select
    rel-update(a, {(r): {a: r.a + 1, b:r.b, c:r.c}}, {(_): true})
      is c
  end
  block:
  # conditional update

    a = rel-from-table(table a,b,c:
            row: 1,2,10
            row: 2,3,11
            row: 3,3,12
            row: 3,4,13
          end)
    c = rel-from-table(table a,b,c:
            row: 1,2,10
            row: 4,3,11
            row: 6,3,12
            row: 3,4,13
          end)
    rel-update(a, {(r): {a: r.a * 2, b:r.b, c:r.c}}, {(r): r.b == 3})
      is c
  end

  # project, rename, extend, select
  block:
    a = rel-from-table(table a,b,c:
            row: 1,2,10
            row: 2,3,11
            row: 3,3,12
            row: 3,4,13
          end)
    c = rel-from-table(table a,c:
            row: 1,10
            row: 2,11
            row: 3,12
            row: 3,13
          end)
    rel-project([list: 'a','c'], a) is c
  end

  block:
    a = rel-from-table(table a,b,c:
            row: 1,2,10
            row: 2,3,11
            row: 3,3,12
            row: 3,4,13
          end)
    c = rel-from-table(table a,d,c:
            row: 1,2,10
            row: 2,3,11
            row: 3,3,12
            row: 3,4,13
          end)
    rel-rename([list: {'b';'d'}], a) is c
  end

  block:
    a = rel-from-table(table a,b,c:
            row: 1,2,10
            row: 2,3,11
            row: 3,3,12
            row: 3,4,13
          end)
    c = rel-from-table(table f,g,c:
            row: 1,2,10
            row: 2,3,11
            row: 3,3,12
            row: 3,4,13
          end)
    rel-rename([list: {'a';'f'}, {'b';'g'}], a) is c
  end


  block:
    a = rel-from-table(table a,b:
            row: 1,2
            row: 2,3
            row: 3,3
            row: 3,4
          end)
    c = rel-from-table(table a,b,c,d:
            row: 1,2,2,3
            row: 2,3,6,5
            row: 3,3,9,6
            row: 3,4,12,7
          end)
    rel-extend(a, {(r): {c: r.a * r.b, d: r.a + r.b}}) is c
  end

  block:
    a = rel-from-table(table a,b:
            row: 1,2
            row: 2,3
            row: 3,3
            row: 3,4
          end)
    c = rel-from-table(table a,b,c,d:
            row: 1,4,2,3
            row: 2,5,6,5
            row: 3,5,9,6
            row: 3,6,12,7
          end)
    rel-select(a, {(r): {a: r.a, b: r.b + 2, c: r.a * r.b, d: r.a + r.b}}) is c
  end

  block:
    a = rel-from-table(table a,b:
            row: 1,2
            row: 2,3
            row: 3,3
            row: 3,4
          end)
    c = rel-from-table(table a,b:
            row: 2,3
            row: 3,3
          end)
  
    rel-where(a, {(r): r.b == 3}) is c

  end


  block:
  # join
    a = rel-from-table(table a,b:
            row: 1,2
            row: 2,3
            row: 3,3
            row: 3,4
          end)
    b = rel-from-table(table a,c:
            row: 2,3
            row: 3,3
          end)
    c = rel-from-table(table a,b,c:
            row: 2,3,3
            row: 3,3,3
            row: 3,4,3
          end)
    
    rel-join(a, b) is c
  end
  # antijoin
  block:
  # join
    a = rel-from-table(table a,b:
            row: 1,2
            row: 2,3
            row: 3,3
            row: 3,4
            row: 4,5
          end)
    b = rel-from-table(table a:
            row: 2
            row: 3
          end)
    c = rel-from-table(table a,b:
            row: 1,2
            row: 4,5
          end)
    
    rel-not-matching(a, b) is c
  end

  block:
  # group
    a = rel-from-table(table a,b,c:
        row: 1,2,3
        row: 1,3,4
        row: 2,1,3
        row: 2,1,4
        row: 3,4,5
      end)
    b = rel-from-table(table a,d:
        row: 1, rel-from-table(table b,c:
                  row: 2,3
                  row: 3,4
                end)
        row: 2, rel-from-table(table b,c:
                  row: 1,3
                  row: 1,4
                end)
        row: 3, rel-from-table(table b,c:
                  row: 4,5
                end)
      end)
    rel-group([list: "a"], "d", a) is b
  
    # ungroup
    rel-ungroup("d", b) is a
  end  

  # agg demo

  block:
    a = rel-from-table(table a,b:
          row: 'a', 1
          row: 'a', 2
          row: 'a', 4
          row: 'b', 1
          row: 'c', 0
          row: 'b', 4
        end)
    # needs some work, especially to allow multiple summaries
    rel-summarize({0;_ + _}, "b", a) is 12

  end

end
