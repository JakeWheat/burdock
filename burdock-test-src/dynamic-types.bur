
check "simplest type tag checks":
  assert-type-compat(3 :: Number) is 3
  assert-type-compat('a' :: Number) raises "type not compatible"
  let x :: Number = 3: x end is 3
  let x :: Boolean = 3: x end raises "type not compatible"


  assert-type-compat(true :: Boolean) is true
  let x :: Boolean = true: x end is true

  assert-type-compat('a' :: String) is 'a'
  let x :: String = 'b': x end is 'b'


  # revisit when working on anomaly tests/ error messages
  assert-type-compat('a' :: Four) raises 'identifier not found'
  let x :: Four = 'b': x end raises 'identifier not found'

  
  
  
end
