

check "show failures":
  when false:
    1 is 2
    raise("balls") is 3
    3 is raise("balls2")
    raise("balls3") is raise("balls4")
    1 is-not 1
  end
end


check "test the tests - how can this be trusted?":

  my-do-bpred-test(lam(a,b): a == b end, "is", "!=", "1", "1", right(1), right(1))
    is test-pass("1 is 1")

  my-do-bpred-test(lam(a,b): a == b end, "is", "!=", "1", "2", right(1), right(2))
    is test-fail("1 is 2", "1\n!=\n2")

  my-do-bpred-test(lam(a,b): not(a == b) end, "is-not", "!=", "1", "2", right(1), right(2))
    is test-pass("1 is-not 2")
  my-do-bpred-test(lam(a,b): not(a == b) end, "is-not", "==", "1", "1", right(1), right(1))
    is test-fail("1 is-not 1", "1\n==\n1")

  my-do-bpred-test(lam(a,b): a == b end, "is", "!=", "1", "1", left("a error"), right(1))
    is test-fail("1 is 1", 'LHS error: "a error"')
  my-do-bpred-test(lam(a,b): a == b end, "is", "!=", "1", "1", right(1), left("b error"))
    is test-fail("1 is 1", 'RHS error: "b error"')
  my-do-bpred-test(lam(a,b): a == b end, "is", "!=", "1", "1", left("a error"), left("b error"))
    is test-fail("1 is 1", 'LHS error: "a error"\nRHS error: "b error"')

  my-do-bpred-test(lam(a,b): raise(gremlin) end, "is", "!=", "1", "1", right(1), right(1))
    is test-fail("1 is 1", '1 is 1 raised Value "gremlintype" <<Bool>>')

end
