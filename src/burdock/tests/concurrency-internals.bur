
#|

tests for the internals of the concurrency implementation, things that
users won't usually use directly

|#

include concurrency-internals

#|

an inbox is an stm tqueue - you can write to it from any thread, but
you should only read from it from a single thread. it supports a close
state, which is useful for troubleshooting - it means users get better
error messages when they misuse the concurrency system

These aren't really intended to be used directly by users, only via
the implicit self inbox that gets created when you spawn a thread,
and one is implicitly created for api calls to use as their self.

|#

check "inboxes basics":

# create inbox, send and receive
  block:
    ib = make-inbox()
    send-inbox(ib, "test message")
    receive-inbox(ib) is "test message"
  end

# try to send on closed inbox

# try to receive on closed inbox

end

check "inbox simple timeouts":

#check receive within a timeout
#check receive timing out
#check receive success on timeout 0
#check receive failure on timeout 0

#|  block:
    ib = make-inbox()
    send-inbox(ib, "test message")
    receive-inbox-timeout(ib,0) is some("test message")
  end


  block:
    ib = make-inbox()
    receive-inbox-timeout(ib,0) is none
  end|#


end

check "selective receive":

#|
consider only two kinds of messages, ones which match and ones which
  don't, could use true and false?
call receive with and without a timeout
  with a timeout 0
  with a timeout where a message is pushed before the timeout that
    matches, that doesn't match
  and where the message is pushed after the timeout
the starting state will be:
  matching message in the queue
  matching message in the buffer
  unmatching then matching in the queue
    in the buffer
    first in the buffer, second in the queue
  unmatching in the buffer
  unmatching in the queue
    both

 create a little dsl to describe these so can generate tests from
  them quickcheck style

|#
 

end
