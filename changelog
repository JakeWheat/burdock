## Week 20 22nd May

- demo Python FFI
- remove sqlite ffi, can use it via Python FFI
- overhaul build system
- literate mode, for testing the website pages

## Week 19 15th May

- new FFI supporting members, app on FFI values
- torepr, equals, lt now mostly regular member functions

## Week 14 2022 ending 10th April

- update to work with GHC 8.10.7 (as of at least week 20 2022, works
  with GHC 9.2.2 also)

## Week 8 (since starting project) 12th Dec

- mostly working equals and other comparisons, main methods todo now
  is arithmetic operators
- improvements to the haskell ffi, support tostring, equals and other
  comparisons for ffi types
- simple package system demo, you can sort of "package" burdock code
  and haskell ffi code
- start adding sqlite wrapper
- prelude support for types and data decls improved

## Week 7 5th Dec

- finish off first pass on in language concurrency:
  spawn, spawn-monitor, self, send, selective receive, async-exit
- fix repl regression from concurrency work
- add for loops
- add tuple binding
- extensions to binding: general as, general wildcard, num literals,
- string literals
- implement methods (ad hoc polymorphism)
- progress on updating the system to use methods for system functions
  such as equal-always

## Week 6 28th Nov

- progress on in language concurrency

## Week 5 21st Nov

- implement most of Haskell concurrency code to support concurrency in
  language

## Week 4 14th Nov

- complete first pass on runtime tag checking
- implement more Pyret syntax
- rough relational algebra demo

## Week 3 7th Nov

- implement a substantial amount of runtime tag checking

## Week 2 31st Oct

- add API, repl, command line runner
- add modules and first pass on prelude statements
- rough FFI for haskell functions and opaque values
- improved test runner
- call stack on exception demo

## Week 1 of the project ending 24th Oct 2021

- build script
- simple expression interpreter, roughly: lam, let, closures, vars,
  agdt, tuples, records, check blocks
